using Microsoft.EntityFrameworkCore.Storage;
using SME.TMS.API.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace SME.TMS.API.Repo
{
    public interface IDriverRepository
    {
        Task<Contract> GetContractById(int id);
        Task<Driver> GetDriverById(int id);
        Task<StateProvince> GetStateProvinceById(int id);
        Task<GenderType> GetGenderTypeById(int id);
        Task<DriverPhone> GetDriverPhoneById(int id);
        Task<PhoneNumberType> GetPhoneNumberTypeById(int id);
        Task<DriverEmail> GetDriverEmailById(int id);
        Task<DriverMedicalHistory> GetDriverMedicalHistoryById(int id);
        Task<DriverInsurance> GetDriverInsuranceById(int id);
        Task<PortalUser> GetPortalUserById(int id);
        Task<PortalUser> GetPortalUserByUsername(string username);
        Task<Invoice> GetInvoiceById(int id);
        Task<List<Invoice>> GetInvoicesByManufacturerId(int id, int companyId);
        Task<CashReceipt> GetCashReceiptById(int id);
        Task<List<CashReceipt>> GetCashReceiptByManufacturerId(int id, int companyId);
        Task<EthnicityType> GetEthnicityTypeById(int id);
        Task<PortalUser> AuthenticateUser(string username, string password);
        Task<PortalUser> AuthenticateUserToken(int userId, string userToken);
        Task<FinanceType> GetFinanceTypeByName(string name);
        Task<List<Driver>> GetDriversByCompanyId(int id);
        Task<List<DriverContract>> GetDriverContractsByDriverId(int id);
        Task<List<DriverEmail>> GetDriverEmailsByDriverId(int id);
        Task<List<DriverMedicalHistory>> GetDriverMedicalHistoryByDriverId(int id);
        Task<List<DriverPhone>> GetDriverPhonesByDriverId(int id);
        Task<List<DriverInsurance>> GetDriverInsuranceByDriverId(int id);
        Task<List<CashReceipt>> GetCashReceiptsByCompanyId(int id);
        Task<List<Truck>> GetTrucksByCompanyId(int id);
        Task<List<Contract>> GetContractsByCompanyId(int id);
        Task<List<DriverContract>> GetDriverContractsByContractId(int id);
        Task<List<ContractTruck>> GetContractTrucksByContractId(int id);
        Task<List<ContractFinanceAgreement>> GetContractFinanceAgreementsByContractId(int id);
        Task<DriverContract> GetDriverContractById(int id);
        Task<ContractTruck> GetContractTruckById(int id);
        Task<ContractFinanceAgreement> GetContractFinanceAgreementById(int id);
        Task<List<FinanceType>> GetAllFinanceTypes();
        Task<List<GenderType>> GetAllGenderTypes();
        Task<List<PhoneNumberType>> GetAllPhoneNumberTypes();
        Task<List<InsuranceProvider>> GetAllInsuranceProviders();
        Task<List<MedicalProvider>> GetAllMedicalProviders();
        Task<List<EthnicityType>> GetAllEthnicityTypes();
        Task<List<StateProvince>> GetAllStateProvinces();
        Task<List<MaintenanceType>> GetAllMaintenanceTypes();
        Task<List<JournalType>> GetAllJournalTypes();
        Task<List<Manufacturer>> GetAllManufacturers();
        Task<Truck> GetTruckByTruckNumber(string truckNumber);
        Task<List<Invoice>> GetInvoicesByCompanyId(int id);
        Task<List<InvoiceRev>> GetInvoiceRevListByInvoiceId(int id);
        Task<List<CashReceiptRev>> GetCashReceiptRevListByCashReceiptId(int id);
        Task<List<FrequencyType>> GetAllFrequencyTypes();
        Task<FrequencyType> GetFrequencyTypeById(int id);
        Task<List<JournalEntry>> GetMaintenanceJournalEntriesByDriverId(int id);
        Task<List<JournalEntry>> GetRecurringJournalEntriesByDriverId(int id);
        Task<List<JournalEntry>> GetRecurringJournalEntriesByContractId(int id);
        Task<JournalEntry> GetJournalEntryById(int id);
        Task<decimal> GetInvoiceAcknowledgedProgressPercent();
        Task<decimal> GetCashReceiptReconciledProgressPercent();
        Task<JournalEntry> GetRecurringJournalEntryById(int id);
        Task<JournalEntry> GetMaintenanceJournalEntryById(int id);
        Task<ExpenseType> GetExpenceTypeById(int id);
        Task<List<ExpenseType>> GetAllExpenseTypes();
        Task<MaintenanceType> GetMaintenanceById(int id);
        Task<JournalType> GetJournalTypeById(int id);
        Task<List<JournalImport>> GetJournalImportListById(int journalEntryId);
        Task<JournalImport> GetJournalImportById(Guid journalImportId);
        bool DeleteJournalImportById(Guid journalImportId);
        Task<Period> GetPeriodById(int id);
        Task<List<Period>> GetPeriodsByCompanyId(int id);
        Task<List<GLAccount>> GetAllGLAccounts();
        Task<bool> IsPeriodOverlapping(DateTime startDate, DateTime endDate);
        Task<List<Invoice>> GetInvoicesByDriverId(int id);
        void SetTimeout(int timeout);
        Task<int> SaveChanges();
        void Insert(object entity);
        void Attach(object entity);
        void Ignore(object entity);
        void Delete(object entity);
        bool IsChanged(object entity);
        int GetEntityState(object entity);
        Task<IDbContextTransaction> StartTransaction();
    }
}
